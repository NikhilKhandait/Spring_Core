package com.rays.dao;

import java.util.List;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.rays.dto.UserDTO;;

@Repository
public class UserDAOJDBCImp implements UserDAOInt {

	private JdbcTemplate jdbcTemplate;

	@Autowired
	public void setDataSource(DataSource dataSource) {
		this.jdbcTemplate = new JdbcTemplate(dataSource);
	}

	public long add(UserDTO dto) {

		String sql = "INSERT INTO USERDAO VALUES(?,?,?,?,?)";
		int pk = jdbcTemplate.update(sql, dto.getId(), dto.getFirstName(), dto.getLastName(), dto.getLogin(),
				dto.getPassword());
		return pk;

	}

	public void update(UserDTO dto) {
		String sql = "UPDATE USERDAO SET FIRST_NAME = ?, LAST_NAME = ?, LOGIN = ?, PASSWORD = ? WHERE ID = ?";

		int i = jdbcTemplate.update(sql, dto.getFirstName(), dto.getLastName(), dto.getLogin(), dto.getPassword(),
				dto.getId());
		System.out.println("updated...jdbcimp...");
	}

	public void delete(long id) {
		String sql = "DELETE FROM USERDSO WHERE ID =?";
		Object[] params = { id };
		int i = jdbcTemplate.update(sql, id);
	}

	public UserDTO findByLogin(String login) {

		String sql = "SELECT ID,FIRSTNAME,LASTNAME,LOGIN,PASSWORD FROM USER WHERE ID=?";
		Object[] params = { login };
		UserDTO user = jdbcTemplate.queryForObject(sql, params, new UserMapper());
		return user;
	}

	public UserDTO authenticate(String login, String password) {

		try {

			String sql = "SELECT ID, FIRST_NAME, LAST_NAME, LOGIN, PASSWORD FROM USERDAO WHERE LOGIN = ? AND PASSWORD = ?";
			Object[] params = { login, password };
			UserDTO user = jdbcTemplate.queryForObject(sql, params, new UserMapper());

		} catch (EmptyResultDataAccessException e) {

		}
		return null;
	}

	public UserDTO findByPK(long pk) {
		UserDTO dto = null;
		String sql = "SELECT ID, FIRST_NAME, LAST_NAME, LOGIN, PASSWORD FROM USER WHERE ID = ?";
		Object[] params = { pk };
		dto = (UserDTO) jdbcTemplate.query(sql, params, new UserMapper());

		return dto;
	}

	public List search(UserDTO dto) {
		String sql = "SELECT ID, FIRST_NAME, LAST_NAME, LOGIN, PASSWORD FROM USER";
		List l = jdbcTemplate.query(sql, new UserMapper());
		return l;

	}

	public List search(UserDTO dto, int pageNo, int pageSize) {
		String sql = "SELECT ID, FIRST_NAME, LAST_NAME, LOGIN, PASSWORD FROM USER LIMIT " + pageNo + "," + pageSize;
		List l = jdbcTemplate.query(sql, new UserMapper());
		return l;
	}
}
